<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  
  <display-name>${project.name} ${project.version} SVN@${buildNumber}</display-name>
  <description>${project.description}</description>
  <!--  rootContext -->
  <!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext
       instead of the default XmlWebApplicationContext -->
    <context-param>
      <param-name>contextClass</param-name>
      <param-value>
         org.springframework.web.context.support.AnnotationConfigWebApplicationContext
      </param-value>
    </context-param>
    <!-- Configuration locations must consist of one or more comma- or space-delimited
       fully-qualified @Configuration classes. Fully-qualified packages may also be
       specified for component-scanning -->
    <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>ch.erni.webapplication.root.Config</param-value>
    </context-param>
  <!-- Bootstrap the root application context as usual using ContextLoaderListener -->
  <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- Spring Profiles -->
  <context-param>
    <param-name>spring.profiles.active</param-name>
    <param-value>${web.xml.spring.active.profile}</param-value>
  </context-param>
  
  <!-- servletContext -->  
  <!-- Declare a Spring MVC DispatcherServlet as usual -->
  <servlet>
      <servlet-name>spring-mvc-dispatcher</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext
           instead of the default XmlWebApplicationContext -->
      <init-param>
      	<param-name>contextClass</param-name>
      	<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
      </init-param>
      <!-- Again, config locations must consist of one or more comma- or space-delimited
           and fully-qualified @Configuration classes -->
      <init-param>
      	<param-name>contextConfigLocation</param-name>
      	<param-value>ch.erni.webapplication.servlet.WebMvcConfig</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
      <servlet-name>spring-mvc-dispatcher</servlet-name>
      <url-pattern>/</url-pattern>
  </servlet-mapping>
   
</web-app>